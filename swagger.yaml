openapi: 3.0.0
info:
  title: anti-social-losCrudos API
  version: 1.0.0
  description: API para la red social experimental Anti-Social Relational - Los Crudos

servers:
  - url: https://anti-social-api.onrender.com
    description: Servidor de producción
  - url: http://localhost:3001
    description: Servidor de desarrollo

tags:
  - name: USER
    description: Endpoints de usuarios
  - name: POST
    description: Endpoints de publicaciones
  - name: COMMENTS
    description: Endpoints de comentarios
  - name: TAGS
    description: Endpoints de etiquetas
  - name: COMMENTTAGS
    description: Endpoints de asociación post-tag

paths:
  # === USER ===
  /users:
    get:
      tags: [USER]
      summary: Obtener todos los usuarios
      responses:
        "200":
          description: Lista de usuarios
    post:
      tags: [USER]
      summary: Crear un usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "201":
          description: Usuario creado

  /users/{id}:
    get:
      tags: [USER]
      summary: Obtener usuario por ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Usuario encontrado
        "404":
          description: Usuario no encontrado
    put:
      tags: [USER]
      summary: Actualizar usuario
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          description: Usuario actualizado
    delete:
      tags: [USER]
      summary: Eliminar usuario
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: Usuario eliminado

  # === POST ===
  /post:
    get:
      tags: [POST]
      summary: Obtener todos los posts
      responses:
        "200":
          description: Lista de posts
    post:
      tags: [POST]
      summary: Crear un post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Post"
      responses:
        "201":
          description: Post creado

  /post/{id}:
    get:
      tags: [POST]
      summary: Obtener post por ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Post encontrado
        "404":
          description: Post no encontrado
    put:
      tags: [POST]
      summary: Actualizar post
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Post"
      responses:
        "200":
          description: Post actualizado
    delete:
      tags: [POST]
      summary: Eliminar post
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: Post eliminado

  /post/{id}/images:
    post:
      tags: [POST]
      summary: Agregar imagen a un post
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostImage"
      responses:
        "201":
          description: Imagen agregada

  /post/{id}/addImage:
    post:
      tags: [POST]
      summary: Agregar imagen adicional a un post
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostImage"
      responses:
        "201":
          description: Imagen agregada

  /post/{id}/deleteImage/{imageId}:
    delete:
      tags: [POST]
      summary: Eliminar una imagen de un post
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
        - in: path
          name: imageId
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Imagen eliminada

  /post/{id}/comment:
    post:
      tags: [POST]
      summary: Agregar comentario a un post
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Comment"
      responses:
        "201":
          description: Comentario agregado

  # === COMMENTS ===
  /comments:
    get:
      tags: [COMMENTS]
      summary: Obtener todos los comentarios
      responses:
        "200":
          description: Lista de comentarios

  /comments/{id}:
    put:
      tags: [COMMENTS]
      summary: Actualizar comentario
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Comment"
      responses:
        "200":
          description: Comentario actualizado
    delete:
      tags: [COMMENTS]
      summary: Eliminar comentario
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Comentario eliminado

  # === TAGS ===
  /tags:
    get:
      tags: [TAGS]
      summary: Obtener todas las etiquetas
      responses:
        "200":
          description: Lista de etiquetas
    post:
      tags: [TAGS]
      summary: Crear etiqueta
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Tag"
      responses:
        "201":
          description: Etiqueta creada

  /tags/{id}:
    delete:
      tags: [TAGS]
      summary: Eliminar etiqueta
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: Etiqueta eliminada

  # === COMMENTTAGS ===
  /comment-tags:
    post:
      tags: [COMMENTTAGS]
      summary: Asociar tag a post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                postId:
                  type: integer
                tagId:
                  type: integer
      responses:
        "200":
          description: Tag asociado
    delete:
      tags: [COMMENTTAGS]
      summary: Eliminar tag de post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                postId:
                  type: integer
                tagId:
                  type: integer
      responses:
        "200":
          description: Tag eliminado

  /comment-tags/post/{id}:
    get:
      tags: [COMMENTTAGS]
      summary: Obtener tags asociados a un post
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Lista de tags asociados al post

components:
  schemas:
    User:
      type: object
      properties:
        nickName:
          type: string
        nombre:
          type: string
        email:
          type: string
        fechaNacimiento:
          type: string
          format: date
    Post:
      type: object
      properties:
        contenido:
          type: string
        userId:
          type: integer
    PostImage:
      type: object
      properties:
        url:
          type: string
        userId:
          type: integer
    Comment:
      type: object
      properties:
        comentario:
          type: string
        userIdComment:
          type: integer
    Tag:
      type: object
      properties:
        nombreEtiqueta:
          type: string
